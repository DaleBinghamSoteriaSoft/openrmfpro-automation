{
  "SchemaVersion": 2,
  "ArtifactName": "soteriasoft.jfrog.io/openrmfpro/openrmfpro-web:2.09.19",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.18.5"
    },
    "ImageID": "sha256:87e05907abb7bbe272c64e7eb9184d850450b91b1d3030fbc0f9e504b9311cfa",
    "DiffIDs": [
      "sha256:9fe9a137fd002363ac64f5af66146702432b638a83ee0c5b620c40a9e433e813",
      "sha256:74bdc28e1db66f03b3c2111b297b2ab668b041d90f9ee8755e625abec31b7d49",
      "sha256:5adc310278577a05d1274ba8976ae79d283edc7ca84c66e97a41a62f3fac90ab",
      "sha256:b5a8bff17926ef9bdb431624d5430d8c85faddfc6575202867f0e8152a7c579e",
      "sha256:7b3eb77378ce0ca05000a74ac444ad09824b4f0ec6dda2e8c0245c7abdb77dbb",
      "sha256:045a83c0fbb5eb624cb26a1523060cb1f41fb2e42e63aff640d844993592a0b5",
      "sha256:aaa08007a586b403b07119eb51fd93c3347e30bbe859235ffe1cf79b76e8eaad",
      "sha256:725cefb1c2d358a6b79c253dd929ec46049e2ad739d3f388ad3e6198872de444",
      "sha256:87602c258f375de6bae8abbabecc1c246f135f81edb57c94f43361b284932f20",
      "sha256:2877ad3f1c1c1a90c5e58f27d77184259a7cdafe3210922f467c6e51eded0b68",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:895ba63e20e2769f4167182e988fbd1e77e807098c8dae94a4561d866ebc4fc4",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:79c8ff88135ee38aa9be241fd3b4c6e09632632ef2787efb50e3643bcf483b7c",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:921b2220db7c0d56ffc94b469ef58f358cc70364c164a00d466213de5cf09b2e",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:cf6db8479de3cefa8e5cf76b0387ff2e497fbbfbc20f6c149e3b3aae76a4b168",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:8c010f0fdbc5d8aa56356a8e31a0a35164087b0eb098405b3cdb50d12685a197",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:88c31aaea360f76b4c1205667f6bb1288f57d57d2bc65ad1f23e545892cf8a18",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:48519a516855afef421708df067bf61a3896e4f34b497d0e21fd9bb766e0dd4b",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:d3a11372ecc4967fc05fe2cbd831dd8f86fc63373849a828c764237d3abef1f4",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:63a86089a68a8954f16a26e1027dae423e9129e7c74aa45a9a0330cbe4879d18",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:474930c37c6c0fbc709493dd6beaed0c16998d746a3d3f06c7f2b348e84f0d85",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
      "sha256:eedbd41c6c3e242cbd11189c8d679a38d9f8cb5cb3812797b46b0e2205dc549e",
      "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
    ],
    "RepoTags": [
      "soteriasoft.jfrog.io/openrmfpro/openrmfpro-web:2.09.19"
    ],
    "RepoDigests": [
      "soteriasoft.jfrog.io/openrmfpro/openrmfpro-web@sha256:8e3eee229339988ca3b11b34115aa8dab085bac61070c0a2841ced36edead0c1"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2024-01-02T11:31:36.165839273Z",
      "history": [
        {
          "created": "2023-11-30T23:22:52Z",
          "created_by": "/bin/sh -c #(nop) ADD file:fc714080c3bcbbce7ac746a10d7b4355ffa36293a8d435d62cd5359ea8eb8364 in / "
        },
        {
          "created": "2023-11-30T23:22:52Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "ENV NGINX_VERSION=1.25.3",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "ARG UID=101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "ARG GID=101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:02Z",
          "created_by": "RUN |2 UID=101 GID=101 /bin/sh -c set -x     \u0026\u0026 addgroup -g $GID -S nginx || true     \u0026\u0026 adduser -S -D -H -u $UID -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -f \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del --no-network .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "RUN |2 UID=101 GID=101 /bin/sh -c sed -i 's,listen       80;,listen       8080;,' /etc/nginx/conf.d/default.conf     \u0026\u0026 sed -i '/user  nginx;/d' /etc/nginx/nginx.conf     \u0026\u0026 sed -i 's,/var/run/nginx.pid,/tmp/nginx.pid,' /etc/nginx/nginx.conf     \u0026\u0026 sed -i \"/^http {/a \\    proxy_temp_path /tmp/proxy_temp;\\n    client_body_temp_path /tmp/client_temp;\\n    fastcgi_temp_path /tmp/fastcgi_temp;\\n    uwsgi_temp_path /tmp/uwsgi_temp;\\n    scgi_temp_path /tmp/scgi_temp;\\n\" /etc/nginx/nginx.conf     \u0026\u0026 chown -R $UID:0 /var/cache/nginx     \u0026\u0026 chmod -R g+w /var/cache/nginx     \u0026\u0026 chown -R $UID:0 /etc/nginx     \u0026\u0026 chmod -R g+w /etc/nginx # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "COPY docker-entrypoint.sh / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "EXPOSE map[8080/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "USER 101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T00:19:03Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "ENV NJS_VERSION=0.8.2",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "ARG UID=101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "ARG GID=101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "USER root",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "RUN |2 UID=101 GID=101 /bin/sh -c set -x     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"00b217979265cc9d66c991c9c89427558936dbaa568d175ca45780589171d94f1866217be09a83438d95494cf38baaa6788320f6d8d23f2fb29c03117391ff88 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make module-geoip module-image-filter module-njs module-xslt                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -f \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache curl ca-certificates # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-01T01:17:42Z",
          "created_by": "USER 101",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-02T11:31:34Z",
          "created_by": "COPY ./wwwroot/*.html /usr/share/nginx/html/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:34Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:34Z",
          "created_by": "COPY ./wwwroot/reports/ /usr/share/nginx/html/reports/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:34Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/js/ /usr/share/nginx/html/js/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/assets/ /usr/share/nginx/html/assets/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/help/_site/ /usr/share/nginx/html/help/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/assets/img/favicons/favicon.ico /usr/share/nginx/html/help/favicon.ico # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/admin/ /usr/share/nginx/html/admin/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/img/ /usr/share/nginx/html/img/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/includes/ /usr/share/nginx/html/includes/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "COPY ./wwwroot/systemgroup/ /usr/share/nginx/html/systemgroup/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:35Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "COPY ./wwwroot/subpackage/ /usr/share/nginx/html/subpackage/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "COPY ./wwwroot/templates/ /usr/share/nginx/html/templates/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "RUN /bin/sh -c true # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "LABEL org.opencontainers.image.source=https://github.com/soteriasoftwarellc/openrmfpro-web",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-01-02T11:31:36Z",
          "created_by": "LABEL maintainer=dale.bingham@soteriasoft.com",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:9fe9a137fd002363ac64f5af66146702432b638a83ee0c5b620c40a9e433e813",
          "sha256:74bdc28e1db66f03b3c2111b297b2ab668b041d90f9ee8755e625abec31b7d49",
          "sha256:5adc310278577a05d1274ba8976ae79d283edc7ca84c66e97a41a62f3fac90ab",
          "sha256:b5a8bff17926ef9bdb431624d5430d8c85faddfc6575202867f0e8152a7c579e",
          "sha256:7b3eb77378ce0ca05000a74ac444ad09824b4f0ec6dda2e8c0245c7abdb77dbb",
          "sha256:045a83c0fbb5eb624cb26a1523060cb1f41fb2e42e63aff640d844993592a0b5",
          "sha256:aaa08007a586b403b07119eb51fd93c3347e30bbe859235ffe1cf79b76e8eaad",
          "sha256:725cefb1c2d358a6b79c253dd929ec46049e2ad739d3f388ad3e6198872de444",
          "sha256:87602c258f375de6bae8abbabecc1c246f135f81edb57c94f43361b284932f20",
          "sha256:2877ad3f1c1c1a90c5e58f27d77184259a7cdafe3210922f467c6e51eded0b68",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:895ba63e20e2769f4167182e988fbd1e77e807098c8dae94a4561d866ebc4fc4",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:79c8ff88135ee38aa9be241fd3b4c6e09632632ef2787efb50e3643bcf483b7c",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:921b2220db7c0d56ffc94b469ef58f358cc70364c164a00d466213de5cf09b2e",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:cf6db8479de3cefa8e5cf76b0387ff2e497fbbfbc20f6c149e3b3aae76a4b168",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:8c010f0fdbc5d8aa56356a8e31a0a35164087b0eb098405b3cdb50d12685a197",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:88c31aaea360f76b4c1205667f6bb1288f57d57d2bc65ad1f23e545892cf8a18",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:48519a516855afef421708df067bf61a3896e4f34b497d0e21fd9bb766e0dd4b",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:d3a11372ecc4967fc05fe2cbd831dd8f86fc63373849a828c764237d3abef1f4",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:63a86089a68a8954f16a26e1027dae423e9129e7c74aa45a9a0330cbe4879d18",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:474930c37c6c0fbc709493dd6beaed0c16998d746a3d3f06c7f2b348e84f0d85",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
          "sha256:eedbd41c6c3e242cbd11189c8d679a38d9f8cb5cb3812797b46b0e2205dc549e",
          "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
        ]
      },
      "config": {
        "Cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "Entrypoint": [
          "/docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NGINX_VERSION=1.25.3",
          "PKG_RELEASE=1",
          "NJS_VERSION=0.8.2"
        ],
        "Labels": {
          "maintainer": "dale.bingham@soteriasoft.com",
          "org.opencontainers.image.created": "2024-01-01T01:17:26.303Z",
          "org.opencontainers.image.description": "Unprivileged NGINX Dockerfiles",
          "org.opencontainers.image.licenses": "Apache-2.0",
          "org.opencontainers.image.revision": "87e29d2ba0bcec34c36f85611f03aebcda591dbb",
          "org.opencontainers.image.source": "https://github.com/soteriasoftwarellc/openrmfpro-web",
          "org.opencontainers.image.title": "docker-nginx-unprivileged",
          "org.opencontainers.image.url": "https://github.com/nginxinc/docker-nginx-unprivileged",
          "org.opencontainers.image.version": "1.25.3-alpine"
        },
        "User": "101",
        "ArgsEscaped": true,
        "StopSignal": "SIGQUIT"
      }
    }
  },
  "Results": [
    {
      "Target": "soteriasoft.jfrog.io/openrmfpro/openrmfpro-web:2.09.19 (alpine 3.18.5)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
