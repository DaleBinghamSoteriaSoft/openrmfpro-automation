{
    "registryId": "104773272540",
    "repositoryName": "openrmfpro/openrmfpro-msg-artifact",
    "imageId": {
        "imageDigest": "sha256:e7af6ea38ff40f3343b9c4a5065cef037764cbba0fc82f3b72d2a24338ec982d",
        "imageTag": "2.10.08"
    },
    "imageScanStatus": {
        "status": "COMPLETE",
        "description": "The scan was completed successfully."
    },
    "imageScanFindings": {
        "imageScanCompletedAt": "2025-04-27T10:43:36-04:00",
        "vulnerabilitySourceUpdatedAt": "2025-04-27T10:43:36-04:00",
        "findingSeverityCounts": {
            "HIGH": 4,
            "MEDIUM": 9,
            "CRITICAL": 1
        },
        "findings": [
            {
                "name": "CVE-2023-42365",
                "description": "A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2023-42365",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "1.36.1-r15"
                    },
                    {
                        "key": "package_name",
                        "value": "busybox"
                    }
                ]
            },
            {
                "name": "CVE-2023-42366",
                "description": "A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2023-42366",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "1.36.1-r15"
                    },
                    {
                        "key": "package_name",
                        "value": "busybox"
                    }
                ]
            },
            {
                "name": "CVE-2024-13176",
                "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low. The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-13176",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "4.1"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:P/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2025-26466",
                "description": "A flaw was found in the OpenSSH package. For each ping packet the SSH server receives, a pong packet is allocated in a memory buffer and stored in a queue of packages. It is only freed when the server/client key exchange has finished. A malicious client may keep sending such packages, leading to an uncontrolled increase in memory consumption on the server side. Consequently, the server may become unavailable, resulting in a denial of service attack.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2025-26466",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.9"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "9.6_p1-r0"
                    },
                    {
                        "key": "package_name",
                        "value": "openssh"
                    }
                ]
            },
            {
                "name": "CVE-2024-6387",
                "description": "A security regression (CVE-2006-5051) was discovered in OpenSSH's server (sshd). There is a race condition which can lead sshd to handle some signals in an unsafe manner. An unauthenticated, remote attacker may be able to trigger it by failing to authenticate within a set time period.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-6387",
                "severity": "HIGH",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "8.1"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "9.6_p1-r0"
                    },
                    {
                        "key": "package_name",
                        "value": "openssh"
                    }
                ]
            },
            {
                "name": "CVE-2024-4741",
                "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use. The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use. The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use. While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-4741",
                "severity": "HIGH",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "7.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2023-42363",
                "description": "A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2023-42363",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "1.36.1-r15"
                    },
                    {
                        "key": "package_name",
                        "value": "busybox"
                    }
                ]
            },
            {
                "name": "CVE-2023-42364",
                "description": "A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2023-42364",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "1.36.1-r15"
                    },
                    {
                        "key": "package_name",
                        "value": "busybox"
                    }
                ]
            },
            {
                "name": "CVE-2024-9143",
                "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes. Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low. In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates. Any problematic use-cases would have to be using an \"exotic\" curve encoding. The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions. Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds. Remote code execution cannot easily be ruled out. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-9143",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "4.3"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2024-4603",
                "description": "Issue summary: Checking excessively long DSA keys or parameters may be very slow. Impact summary: Applications that use the functions EVP_PKEY_param_check() or EVP_PKEY_public_check() to check a DSA public key or DSA parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The functions EVP_PKEY_param_check() or EVP_PKEY_public_check() perform various checks on DSA parameters. Some of those computations take a long time if the modulus (`p` parameter) is too large. Trying to use a very large modulus is slow and OpenSSL will not allow using public keys with a modulus which is over 10,000 bits in length for signature verification. However the key and parameter check functions do not limit the modulus size when performing the checks. An application that calls EVP_PKEY_param_check() or EVP_PKEY_public_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. These functions are not called by OpenSSL itself on untrusted DSA keys so only applications that directly call these functions may be vulnerable. Also vulnerable are the OpenSSL pkey and pkeyparam command line applications when using the `-check` option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are affected by this issue.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-4603",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "5.3"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2024-5535",
                "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application beahviour or a crash. In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer leading to a loss of confidentiality. However, only applications that directly call the SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists it returns the first item in the client list. In either case it will signal whether an overlap between the two lists was found. In the case where SSL_select_next_proto is called with a zero length client list it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server side application callback for ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case if the SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero length server list, and has accidentally passed that zero length server list in the client/client_len parameters, and has additionally failed to correctly handle a \"no overlap\" response (which would normally result in a handshake failure in ALPN) then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control making active exploitation unlikely. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. Due to the low severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included in the next releases when they become available.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-5535",
                "severity": "CRITICAL",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "9.1"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2025-26465",
                "description": "A vulnerability was found in OpenSSH when the VerifyHostKeyDNS option is enabled. A machine-in-the-middle attack can be performed by a malicious machine impersonating a legit server. This issue occurs due to how OpenSSH mishandles error codes in specific conditions when verifying the host key. For an attack to be considered successful, the attacker needs to manage to exhaust the client's memory resource first, turning the attack complexity high.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2025-26465",
                "severity": "MEDIUM",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "6.8"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N"
                    },
                    {
                        "key": "package_version",
                        "value": "9.6_p1-r0"
                    },
                    {
                        "key": "package_name",
                        "value": "openssh"
                    }
                ]
            },
            {
                "name": "CVE-2024-6119",
                "description": "Issue summary: Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address resulting in abnormal termination of the application process. Impact summary: Abnormal termination of an application can a cause a denial of service. Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address when comparing the expected name with an `otherName` subject alternative name of an X.509 certificate. This may result in an exception that terminates the application program. Note that basic certificate chain validation (signatures, dates, ...) is not affected, the denial of service can occur only when the application also specifies an expected DNS name, Email address or IP address. TLS servers rarely solicit client certificates, and even when they do, they generally don't perform a name check against a reference identifier (expected identity), but rather extract the presented identity after checking the certificate chain. So TLS servers are generally not affected and the severity of the issue is Moderate. The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2024-6119",
                "severity": "HIGH",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "7.5"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
                    },
                    {
                        "key": "package_version",
                        "value": "3.1.4-r6"
                    },
                    {
                        "key": "package_name",
                        "value": "openssl"
                    }
                ]
            },
            {
                "name": "CVE-2025-26519",
                "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
                "uri": "https://nvd.nist.gov/vuln/detail/CVE-2025-26519",
                "severity": "HIGH",
                "attributes": [
                    {
                        "key": "CVSS3_SCORE",
                        "value": "8.1"
                    },
                    {
                        "key": "CVSS3_VECTOR",
                        "value": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:L"
                    },
                    {
                        "key": "package_version",
                        "value": "1.2.4_git20230717-r4"
                    },
                    {
                        "key": "package_name",
                        "value": "musl"
                    }
                ]
            }
        ]
    }
}
